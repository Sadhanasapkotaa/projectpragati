name: Deploy Next.js to GitHub Pages

on:
  push:
    branches:
      - MVP/v2  # Change this to match your main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Use LTS version of Node

      - name: Clean node_modules and package-lock.json
        working-directory: ./frontend
        run: |
          rm -rf node_modules
          rm -f package-lock.json

      - name: Convert config files to correct format
        working-directory: ./frontend
        run: |
          # Convert next.config.ts to next.config.js
          if [ -f "next.config.ts" ]; then
            echo "/** @type {import('next').NextConfig} */" > next.config.js
            echo "const nextConfig = {" >> next.config.js
            echo "  output: 'export'," >> next.config.js
            echo "  trailingSlash: true," >> next.config.js
            echo "  images: {" >> next.config.js
            echo "    unoptimized: true," >> next.config.js
            echo "  }," >> next.config.js
            echo "  basePath: process.env.NODE_ENV === 'production' ? '/projectpragati' : ''," >> next.config.js
            echo "};" >> next.config.js
            echo "" >> next.config.js
            echo "module.exports = nextConfig;" >> next.config.js
          fi
          
          # Create postcss.config.js
          echo "module.exports = {" > postcss.config.js
          echo "  plugins: {" >> postcss.config.js
          echo "    tailwindcss: {}," >> postcss.config.js
          echo "    autoprefixer: {}," >> postcss.config.js
          echo "  }," >> postcss.config.js
          echo "}" >> postcss.config.js
          
          # Create tailwind.config.js
          echo "/** @type {import('tailwindcss').Config} */" > tailwind.config.js
          echo "module.exports = {" >> tailwind.config.js
          echo "  content: [" >> tailwind.config.js
          echo "    './pages/**/*.{js,ts,jsx,tsx,mdx}'," >> tailwind.config.js
          echo "    './components/**/*.{js,ts,jsx,tsx,mdx}'," >> tailwind.config.js
          echo "    './app/**/*.{js,ts,jsx,tsx,mdx}'," >> tailwind.config.js
          echo "  ]," >> tailwind.config.js
          echo "  theme: {" >> tailwind.config.js
          echo "    extend: {}," >> tailwind.config.js
          echo "  }," >> tailwind.config.js
          echo "  plugins: []," >> tailwind.config.js
          echo "}" >> tailwind.config.js
          
          # List generated files
          echo "Generated configuration files:"
          ls -la *.js

      - name: Install dependencies
        working-directory: ./frontend
        run: |
          npm install
          npm install --save-dev autoprefixer postcss @tailwindcss/postcss tailwindcss@4.1.6

      - name: Debug packages
        working-directory: ./frontend
        run: |
          echo "Listing installed packages:"
          npm list --depth=0
          echo "Checking for @tailwindcss/postcss:"
          npm list @tailwindcss/postcss

      - name: Build the project
        working-directory: ./frontend
        run: |
          # Next.js build with error output
          npm run build || { echo "Build failed with config files:"; ls -la *.js; cat next.config.js; exit 1; }
        env:
          # Add this to ensure Next.js knows it's a static export
          NEXT_PUBLIC_BASE_PATH: /projectpragati

      - name: Add .nojekyll file
        run: touch ./frontend/out/.nojekyll

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: frontend/out  # The folder the action should deploy
          branch: gh-pages  # The branch the action should deploy to